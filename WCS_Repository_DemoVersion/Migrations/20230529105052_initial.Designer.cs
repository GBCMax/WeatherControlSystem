// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WCS_Repository_DemoVersion;

#nullable disable

namespace WCS_Repository_DemoVersion.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230529105052_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WCS_Repository_DemoVersion.RegionForEFCore", b =>
                {
                    b.Property<int>("IdRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegion"));

                    b.Property<string>("NameOfRegion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRegion");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("WCS_Repository_DemoVersion.SubjectOfTheRegionForEFCore", b =>
                {
                    b.Property<int>("IdSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubject"));

                    b.Property<string>("NameOfSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("IdSubject");

                    b.HasIndex("RegionId");

                    b.ToTable("SubjectOfTheRegions");
                });

            modelBuilder.Entity("WCS_Repository_DemoVersion.WeatherServiceForEFCore", b =>
                {
                    b.Property<int>("IdWeatherService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWeatherService"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Precipitation")
                        .HasColumnType("float");

                    b.Property<double>("Pressure")
                        .HasColumnType("float");

                    b.Property<int>("SubjectOfTheRegionIdSubject")
                        .HasColumnType("int");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<double>("WindSpeed")
                        .HasColumnType("float");

                    b.HasKey("IdWeatherService");

                    b.HasIndex("SubjectOfTheRegionIdSubject");

                    b.ToTable("WeatherServices");
                });

            modelBuilder.Entity("WCS_Repository_DemoVersion.SubjectOfTheRegionForEFCore", b =>
                {
                    b.HasOne("WCS_Repository_DemoVersion.RegionForEFCore", "Region")
                        .WithMany("AdministrativeUnits")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WCS_Repository_DemoVersion.WeatherServiceForEFCore", b =>
                {
                    b.HasOne("WCS_Repository_DemoVersion.SubjectOfTheRegionForEFCore", "SubjectOfTheRegion")
                        .WithMany("Weather")
                        .HasForeignKey("SubjectOfTheRegionIdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubjectOfTheRegion");
                });

            modelBuilder.Entity("WCS_Repository_DemoVersion.RegionForEFCore", b =>
                {
                    b.Navigation("AdministrativeUnits");
                });

            modelBuilder.Entity("WCS_Repository_DemoVersion.SubjectOfTheRegionForEFCore", b =>
                {
                    b.Navigation("Weather");
                });
#pragma warning restore 612, 618
        }
    }
}
